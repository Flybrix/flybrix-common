!function(){"use strict";angular.module("flybrixCommon",[])}(),function(){"use strict";function e(){return{versions:{"1.4.0":"1.4.txt","1.5.0":"1.5.txt","1.5.1":"1.5.txt","1.6.0":"1.6.txt","1.7.0":"1.7.txt"},files:{"1.4.txt":"Vector3f={x:f32,y:f32,z:f32};PIDSettings={kp:f32,ki:f32,kd:f32,integral_windup_guard:f32,d_filter_time:f32,setpoint_filter_time:f32,command_to_value:f32};Version={major:u8,minor:u8,patch:u8};ConfigID=u32;PcbTransform={orientation:Vector3f,translation:Vector3f};MixTable={fz:[i8:8],tx:[i8:8],ty:[i8:8],tz:[i8:8]};MagBias={offset:Vector3f};ChannelProperties={assignment:{thrust:u8,pitch:u8,roll:u8,yaw:u8,aux1:u8,aux2:u8},inversion:{/8/thrust:void,pitch:void,roll:void,yaw:void,aux1:void,aux2:void},midpoint:[u16:6],deadzone:[u16:6]};PIDBypass={/8/thrust_master:void,pitch_master:void,roll_master:void,yaw_master:void,thrust_slave:void,pitch_slave:void,roll_slave:void,yaw_slave:void};PIDParameters={thrust_master:PIDSettings,pitch_master:PIDSettings,roll_master:PIDSettings,yaw_master:PIDSettings,thrust_slave:PIDSettings,pitch_slave:PIDSettings,roll_slave:PIDSettings,yaw_slave:PIDSettings,pid_bypass:PIDBypass};StateParameters={state_estimation:[f32:2],enable:[f32:2]};StatusFlag={/16/boot:void,mpu_fail:void,bmp_fail:void,rx_fail:void,idle:void,enabling:void,clear_mpu_bias:void,set_mpu_bias:void,fail_stability:void,fail_angle:void,enabled:void,battery_low:void,temp_warning:void,log_full:void,fail_other:void,override:void};Color={red:u8,green:u8,blue:u8};LEDStateColors={right_front:Color,right_back:Color,left_front:Color,left_back:Color};LEDStateCase={status:StatusFlag,pattern:u8,colors:LEDStateColors,indicator_red:bool,indicator_green:bool};LEDStates=[/16/LEDStateCase:16];LEDStatesFixed=[LEDStateCase:16];DeviceName=s9;Configuration={/16/version:Version,id:ConfigID,pcb_transform:PcbTransform,mix_table:MixTable,mag_bias:MagBias,channel:ChannelProperties,pid_parameters:PIDParameters,state_parameters:StateParameters,led_states:LEDStates,name:DeviceName};ConfigurationFixed={version:Version,id:ConfigID,pcb_transform:PcbTransform,mix_table:MixTable,mag_bias:MagBias,channel:ChannelProperties,pid_parameters:PIDParameters,state_parameters:StateParameters,led_states:LEDStatesFixed,name:DeviceName};ConfigurationFlag={/16/version:void,id:void,pcb_transform:void,mix_table:void,mag_bias:void,channel:void,pid_parameters:void,state_parameters:void,led_states:[//void:16],name:void};Rotation={pitch:f32,roll:f32,yaw:f32};PIDState={timestamp_us:u32,input:f32,setpoint:f32,p_term:f32,i_term:f32,d_term:f32};RcCommand={throttle:i16,pitch:i16,roll:i16,yaw:i16};State={/32/timestamp_us:u32,status:StatusFlag,v0_raw:u16,i0_raw:u16,i1_raw:u16,accel:Vector3f,gyro:Vector3f,mag:Vector3f,temperature:u16,pressure:u32,ppm:[i16:6],aux_chan_mask:u8,command:RcCommand,control:{fz:f32,tx:f32,ty:f32,tz:f32},pid_master_fz:PIDState,pid_master_tx:PIDState,pid_master_ty:PIDState,pid_master_tz:PIDState,pid_slave_fz:PIDState,pid_slave_tx:PIDState,pid_slave_ty:PIDState,pid_slave_tz:PIDState,motor_out:[i16:8],kinematics_angle:Rotation,kinematics_rate:Rotation,kinematics_altitude:f32,loop_count:u32};StateFields={/32/timestamp_us:void,status:void,v0_raw:void,i0_raw:void,i1_raw:void,accel:void,gyro:void,mag:void,temperature:void,pressure:void,ppm:void,aux_chan_mask:void,command:void,control:void,pid_master_fz:void,pid_master_tx:void,pid_master_ty:void,pid_master_tz:void,pid_slave_fz:void,pid_slave_tx:void,pid_slave_ty:void,pid_slave_tz:void,motor_out:void,kinematics_angle:void,kinematics_rate:void,kinematics_altitude:void,loop_count:void};AuxMask={//aux1_low:void,aux1_mid:void,aux1_high:void,aux2_low:void,aux2_mid:void,aux2_high:void};Command={/32/request_response:void,set_eeprom_data:ConfigurationFixed,reinit_eeprom_data:void,request_eeprom_data:void,request_enable_iteration:u8,motor_override_speed_0:u16,motor_override_speed_1:u16,motor_override_speed_2:u16,motor_override_speed_3:u16,motor_override_speed_4:u16,motor_override_speed_5:u16,motor_override_speed_6:u16,motor_override_speed_7:u16,set_command_override:bool,set_state_mask:StateFields,set_state_delay:u16,set_sd_write_delay:u16,set_led:{pattern:u8,color_right:Color,color_left:Color,indicator_red:bool,indicator_green:bool},set_serial_rc:{enabled:bool,command:RcCommand,aux_mask:AuxMask},set_card_recording_state:{/8/record_to_card:void,lock_recording_state:void},set_partial_eeprom_data:Configuration,reinit_partial_eeprom_data:ConfigurationFlag,req_partial_eeprom_data:ConfigurationFlag,req_card_recording_state:void,set_partial_temporary_config:Configuration,set_command_sources:{/8/serial:void,radio:void},set_calibration:{enabled:bool,mode:u8},set_autopilot_enabled:bool,set_usb_mode:u8};DebugString={deprecated_mask:u32,message:s};HistoryData=DebugString;Response={mask:u32,ack:u32};","1.4.txt.json":'{"version":{"major":1,"minor":4,"patch":0},"id":0,"pcb_transform":{"orientation":{"x":0,"y":0,"z":0},"translation":{"x":0,"y":0,"z":0}},"mix_table":{"fz":[1,1,1,1,1,1,1,1],"tx":[1,1,1,1,-1,-1,-1,-1],"ty":[-1,1,-1,1,-1,1,-1,1],"tz":[1,-1,-1,1,1,-1,-1,1]},"mag_bias":{"offset":{"x":0,"y":0,"z":0}},"channel":{"assignment":{"thrust":2,"pitch":1,"roll":0,"yaw":3,"aux1":4,"aux2":5},"inversion":{"thrust":null,"pitch":true,"roll":true,"yaw":null,"aux1":null,"aux2":null},"midpoint":[1500,1500,1500,1500,1500,1500],"deadzone":[0,0,0,20,0,0]},"pid_parameters":{"thrust_master":{"kp":1.0,"ki":0.0,"kd":0.0,"integral_windup_guard":0.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":1.0},"pitch_master":{"kp":3.5,"ki":0.5,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.005,"setpoint_filter_time":0.005,"command_to_value":30.0},"roll_master":{"kp":3.5,"ki":0.5,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.005,"setpoint_filter_time":0.005,"command_to_value":30.0},"yaw_master":{"kp":1.0,"ki":0.0,"kd":0.0,"integral_windup_guard":0.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":180.0},"thrust_slave":{"kp":1.0,"ki":0.0,"kd":0.0,"integral_windup_guard":0.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":1.0},"pitch_slave":{"kp":5.0,"ki":2.0,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":150.0},"roll_slave":{"kp":5.0,"ki":2.0,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":150.0},"yaw_slave":{"kp":40.0,"ki":10.0,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":240.0},"pid_bypass":{"thrust_master":true,"pitch_master":null,"roll_master":null,"yaw_master":true,"thrust_slave":true,"pitch_slave":null,"roll_slave":null,"yaw_slave":null}},"state_parameters":{"state_estimation":[1,0.01],"enable":[0.001,30]},"led_states":[{"status":{"crash_detected":true},"pattern":"${PATTERN_flash}","colors":"${COLOR_Orange}","indicator_red":false,"indicator_green":false},{"status":{"loop_slow":true},"pattern":"${PATTERN_solid}","colors":"${COLOR_Red}","indicator_red":false,"indicator_green":false},{"status":{"override":true},"pattern":"${PATTERN_solid}","colors":"${COLOR_LightSeaGreen}","indicator_red":false,"indicator_green":false},{"status":{"log_full":true},"pattern":"${PATTERN_flash}","colors":"${COLOR_Orange}","indicator_red":false,"indicator_green":false},{"status":{"no_signal":true},"pattern":"${PATTERN_flash}","colors":"${COLOR_Green}","indicator_red":false,"indicator_green":false},{"status":{"arming":true},"pattern":"${PATTERN_flash}","colors":"${COLOR_Blue}","indicator_red":false,"indicator_green":false},{"status":{"armed":true},"pattern":"${PATTERN_beacon}","colors":"${COLOR_Blue}","indicator_red":false,"indicator_green":false},{"status":{"idle":true},"pattern":"${PATTERN_breathe}","colors":"${COLOR_Green}","indicator_red":false,"indicator_green":false},"${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}"],"name":"FLYBRIX"}',"1.5.txt":"Vector3f={x:f32,y:f32,z:f32};PIDSettings={kp:f32,ki:f32,kd:f32,integral_windup_guard:f32,d_filter_time:f32,setpoint_filter_time:f32,command_to_value:f32};Version={major:u8,minor:u8,patch:u8};ConfigID=u32;PcbTransform={orientation:Vector3f,translation:Vector3f};MixTable={fz:[i8:8],tx:[i8:8],ty:[i8:8],tz:[i8:8]};MagBias={offset:Vector3f};ChannelProperties={assignment:{thrust:u8,pitch:u8,roll:u8,yaw:u8,aux1:u8,aux2:u8},inversion:{/8/thrust:void,pitch:void,roll:void,yaw:void,aux1:void,aux2:void},midpoint:[u16:6],deadzone:[u16:6]};PIDBypass={/8/thrust_master:void,pitch_master:void,roll_master:void,yaw_master:void,thrust_slave:void,pitch_slave:void,roll_slave:void,yaw_slave:void};PIDParameters={thrust_master:PIDSettings,pitch_master:PIDSettings,roll_master:PIDSettings,yaw_master:PIDSettings,thrust_slave:PIDSettings,pitch_slave:PIDSettings,roll_slave:PIDSettings,yaw_slave:PIDSettings,thrust_gain:f32,pitch_gain:f32,roll_gain:f32,yaw_gain:f32,pid_bypass:PIDBypass};StateParameters={state_estimation:[f32:2],enable:[f32:2]};StatusFlag={/16/boot:void,mpu_fail:void,bmp_fail:void,rx_fail:void,idle:void,enabling:void,clear_mpu_bias:void,set_mpu_bias:void,fail_stability:void,fail_angle:void,enabled:void,battery_low:void,temp_warning:void,log_full:void,fail_other:void,override:void};Color={red:u8,green:u8,blue:u8};LEDStateColors={right_front:Color,right_back:Color,left_front:Color,left_back:Color};LEDStateCase={status:StatusFlag,pattern:u8,colors:LEDStateColors,indicator_red:bool,indicator_green:bool};LEDStates=[/16/LEDStateCase:16];LEDStatesFixed=[LEDStateCase:16];DeviceName=s9;Configuration={/16/version:Version,id:ConfigID,pcb_transform:PcbTransform,mix_table:MixTable,mag_bias:MagBias,channel:ChannelProperties,pid_parameters:PIDParameters,state_parameters:StateParameters,led_states:LEDStates,name:DeviceName};ConfigurationFixed={version:Version,id:ConfigID,pcb_transform:PcbTransform,mix_table:MixTable,mag_bias:MagBias,channel:ChannelProperties,pid_parameters:PIDParameters,state_parameters:StateParameters,led_states:LEDStatesFixed,name:DeviceName};ConfigurationFlag={/16/version:void,id:void,pcb_transform:void,mix_table:void,mag_bias:void,channel:void,pid_parameters:void,state_parameters:void,led_states:[//void:16],name:void,velocity_pid_parameters:void,inertial_bias:void};Rotation={pitch:f32,roll:f32,yaw:f32};PIDState={timestamp_us:u32,input:f32,setpoint:f32,p_term:f32,i_term:f32,d_term:f32};RcCommand={throttle:i16,pitch:i16,roll:i16,yaw:i16};State={/32/timestamp_us:u32,status:StatusFlag,v0_raw:u16,i0_raw:u16,i1_raw:u16,accel:Vector3f,gyro:Vector3f,mag:Vector3f,temperature:u16,pressure:u32,ppm:[i16:6],aux_chan_mask:u8,command:RcCommand,control:{fz:f32,tx:f32,ty:f32,tz:f32},pid_master_fz:PIDState,pid_master_tx:PIDState,pid_master_ty:PIDState,pid_master_tz:PIDState,pid_slave_fz:PIDState,pid_slave_tx:PIDState,pid_slave_ty:PIDState,pid_slave_tz:PIDState,motor_out:[i16:8],kinematics_angle:Rotation,kinematics_rate:Rotation,kinematics_altitude:f32,loop_count:u32};StateFields={/32/timestamp_us:void,status:void,v0_raw:void,i0_raw:void,i1_raw:void,accel:void,gyro:void,mag:void,temperature:void,pressure:void,ppm:void,aux_chan_mask:void,command:void,control:void,pid_master_fz:void,pid_master_tx:void,pid_master_ty:void,pid_master_tz:void,pid_slave_fz:void,pid_slave_tx:void,pid_slave_ty:void,pid_slave_tz:void,motor_out:void,kinematics_angle:void,kinematics_rate:void,kinematics_altitude:void,loop_count:void};AuxMask={//aux1_low:void,aux1_mid:void,aux1_high:void,aux2_low:void,aux2_mid:void,aux2_high:void};Command={/32/request_response:void,set_eeprom_data:ConfigurationFixed,reinit_eeprom_data:void,request_eeprom_data:void,request_enable_iteration:u8,motor_override_speed_0:u16,motor_override_speed_1:u16,motor_override_speed_2:u16,motor_override_speed_3:u16,motor_override_speed_4:u16,motor_override_speed_5:u16,motor_override_speed_6:u16,motor_override_speed_7:u16,set_command_override:bool,set_state_mask:StateFields,set_state_delay:u16,set_sd_write_delay:u16,set_led:{pattern:u8,color_right:Color,color_left:Color,indicator_red:bool,indicator_green:bool},set_serial_rc:{enabled:bool,command:RcCommand,aux_mask:AuxMask},set_card_recording_state:{/8/record_to_card:void,lock_recording_state:void},set_partial_eeprom_data:Configuration,reinit_partial_eeprom_data:ConfigurationFlag,req_partial_eeprom_data:ConfigurationFlag,req_card_recording_state:void,set_partial_temporary_config:Configuration,set_command_sources:{/8/serial:void,radio:void},set_calibration:{enabled:bool,mode:u8},set_autopilot_enabled:bool,set_usb_mode:u8};DebugString={deprecated_mask:u32,message:s};HistoryData=DebugString;Response={mask:u32,ack:u32};","1.5.txt.json":'{"version":{"major":1,"minor":5,"patch":0},"id":0,"pcb_transform":{"orientation":{"x":0,"y":0,"z":0},"translation":{"x":0,"y":0,"z":0}},"mix_table":{"fz":[1,1,1,1,1,1,1,1],"tx":[1,1,1,1,-1,-1,-1,-1],"ty":[-1,1,-1,1,-1,1,-1,1],"tz":[1,-1,-1,1,1,-1,-1,1]},"mag_bias":{"offset":{"x":0,"y":0,"z":0}},"channel":{"assignment":{"thrust":2,"pitch":1,"roll":0,"yaw":3,"aux1":4,"aux2":5},"inversion":{"thrust":null,"pitch":true,"roll":true,"yaw":null,"aux1":null,"aux2":null},"midpoint":[1500,1500,1500,1500,1500,1500],"deadzone":[0,0,0,20,0,0]},"pid_parameters":{"thrust_master":{"kp":1.0,"ki":0.0,"kd":0.0,"integral_windup_guard":0.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":1.0},"pitch_master":{"kp":3.5,"ki":0.5,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.005,"setpoint_filter_time":0.005,"command_to_value":30.0},"roll_master":{"kp":3.5,"ki":0.5,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.005,"setpoint_filter_time":0.005,"command_to_value":30.0},"yaw_master":{"kp":1.0,"ki":0.0,"kd":0.0,"integral_windup_guard":0.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":180.0},"thrust_slave":{"kp":1.0,"ki":0.0,"kd":0.0,"integral_windup_guard":0.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":1.0},"pitch_slave":{"kp":5.0,"ki":2.0,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":150.0},"roll_slave":{"kp":5.0,"ki":2.0,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":150.0},"yaw_slave":{"kp":40.0,"ki":10.0,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":240.0},"thrust_gain":4095,"pitch_gain":2047,"roll_gain":2047,"yaw_gain":2047,"pid_bypass":{"thrust_master":true,"pitch_master":null,"roll_master":null,"yaw_master":true,"thrust_slave":true,"pitch_slave":null,"roll_slave":null,"yaw_slave":null}},"state_parameters":{"state_estimation":[1,0.01],"enable":[0.001,30]},"led_states":[{"status":{"crash_detected":true},"pattern":"${PATTERN_flash}","colors":"${COLOR_Orange}","indicator_red":false,"indicator_green":false},{"status":{"loop_slow":true},"pattern":"${PATTERN_solid}","colors":"${COLOR_Red}","indicator_red":false,"indicator_green":false},{"status":{"override":true},"pattern":"${PATTERN_solid}","colors":"${COLOR_LightSeaGreen}","indicator_red":false,"indicator_green":false},{"status":{"log_full":true},"pattern":"${PATTERN_flash}","colors":"${COLOR_Orange}","indicator_red":false,"indicator_green":false},{"status":{"no_signal":true},"pattern":"${PATTERN_flash}","colors":"${COLOR_Green}","indicator_red":false,"indicator_green":false},{"status":{"arming":true},"pattern":"${PATTERN_flash}","colors":"${COLOR_Blue}","indicator_red":false,"indicator_green":false},{"status":{"armed":true},"pattern":"${PATTERN_beacon}","colors":"${COLOR_Blue}","indicator_red":false,"indicator_green":false},{"status":{"idle":true},"pattern":"${PATTERN_breathe}","colors":"${COLOR_Green}","indicator_red":false,"indicator_green":false},"${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}"],"name":"FLYBRIX"}',"1.6.txt":"Vector3f={x:f32,y:f32,z:f32};PIDSettings={kp:f32,ki:f32,kd:f32,integral_windup_guard:f32,d_filter_time:f32,setpoint_filter_time:f32,command_to_value:f32};Version={major:u8,minor:u8,patch:u8};ConfigID=u32;PcbTransform={orientation:Vector3f,translation:Vector3f};MixTable={fz:[i8:8],tx:[i8:8],ty:[i8:8],tz:[i8:8]};MagBias={offset:Vector3f};ChannelProperties={assignment:{thrust:u8,pitch:u8,roll:u8,yaw:u8,aux1:u8,aux2:u8},inversion:{/8/thrust:void,pitch:void,roll:void,yaw:void,aux1:void,aux2:void},midpoint:[u16:6],deadzone:[u16:6]};PIDBypass={/8/thrust_master:void,pitch_master:void,roll_master:void,yaw_master:void,thrust_slave:void,pitch_slave:void,roll_slave:void,yaw_slave:void};PIDParameters={thrust_master:PIDSettings,pitch_master:PIDSettings,roll_master:PIDSettings,yaw_master:PIDSettings,thrust_slave:PIDSettings,pitch_slave:PIDSettings,roll_slave:PIDSettings,yaw_slave:PIDSettings,thrust_gain:f32,pitch_gain:f32,roll_gain:f32,yaw_gain:f32,pid_bypass:PIDBypass};StateParameters={state_estimation:[f32:2],enable:[f32:2]};StatusFlag={/16/_0:void,_1:void,_2:void,no_signal:void,idle:void,arming:void,recording_sd:void,_7:void,loop_slow:void,_9:void,armed:void,battery_low:void,battery_critical:void,log_full:void,crash_detected:void,override:void};Color={red:u8,green:u8,blue:u8};LEDStateColors={right_front:Color,right_back:Color,left_front:Color,left_back:Color};LEDStateCase={status:StatusFlag,pattern:u8,colors:LEDStateColors,indicator_red:bool,indicator_green:bool};LEDStates=[/16/LEDStateCase:16];LEDStatesFixed=[LEDStateCase:16];DeviceName=s9;InertialBias={accel:Vector3f,gyro:Vector3f};VelocityPIDBypass={/8/forward_master:void,right_master:void,up_master:void,_unused_master:void,forward_slave:void,right_slave:void,up_slave:void,_unused_slave:void};VelocityPIDParameters={forward_master:PIDSettings,right_master:PIDSettings,up_master:PIDSettings,forward_slave:PIDSettings,right_slave:PIDSettings,up_slave:PIDSettings,pid_bypass:VelocityPIDBypass};Configuration={/16/version:Version,id:ConfigID,pcb_transform:PcbTransform,mix_table:MixTable,mag_bias:MagBias,channel:ChannelProperties,pid_parameters:PIDParameters,state_parameters:StateParameters,led_states:LEDStates,name:DeviceName,velocity_pid_parameters:VelocityPIDParameters,inertial_bias:InertialBias};ConfigurationFixed={version:Version,id:ConfigID,pcb_transform:PcbTransform,mix_table:MixTable,mag_bias:MagBias,channel:ChannelProperties,pid_parameters:PIDParameters,state_parameters:StateParameters,led_states:LEDStatesFixed,name:DeviceName,velocity_pid_parameters:VelocityPIDParameters,inertial_bias:InertialBias};ConfigurationFlag={/16/version:void,id:void,pcb_transform:void,mix_table:void,mag_bias:void,channel:void,pid_parameters:void,state_parameters:void,led_states:[//void:16],name:void,velocity_pid_parameters:void,inertial_bias:void};Rotation={pitch:f32,roll:f32,yaw:f32};PIDState={timestamp_us:u32,input:f32,setpoint:f32,p_term:f32,i_term:f32,d_term:f32};RcCommand={throttle:i16,pitch:i16,roll:i16,yaw:i16};State={/32/timestamp_us:u32,status:StatusFlag,v0_raw:u16,i0_raw:u16,i1_raw:u16,accel:Vector3f,gyro:Vector3f,mag:Vector3f,temperature:u16,pressure:u32,ppm:[i16:6],aux_chan_mask:u8,command:RcCommand,control:{fz:f32,tx:f32,ty:f32,tz:f32},pid_master_fz:PIDState,pid_master_tx:PIDState,pid_master_ty:PIDState,pid_master_tz:PIDState,pid_slave_fz:PIDState,pid_slave_tx:PIDState,pid_slave_ty:PIDState,pid_slave_tz:PIDState,motor_out:[i16:8],kinematics_angle:Rotation,kinematics_rate:Rotation,kinematics_altitude:f32,loop_count:u32};StateFields={/32/timestamp_us:void,status:void,v0_raw:void,i0_raw:void,i1_raw:void,accel:void,gyro:void,mag:void,temperature:void,pressure:void,ppm:void,aux_chan_mask:void,command:void,control:void,pid_master_fz:void,pid_master_tx:void,pid_master_ty:void,pid_master_tz:void,pid_slave_fz:void,pid_slave_tx:void,pid_slave_ty:void,pid_slave_tz:void,motor_out:void,kinematics_angle:void,kinematics_rate:void,kinematics_altitude:void,loop_count:void};AuxMask={//aux1_low:void,aux1_mid:void,aux1_high:void,aux2_low:void,aux2_mid:void,aux2_high:void};Command={/32/request_response:void,set_eeprom_data:ConfigurationFixed,reinit_eeprom_data:void,request_eeprom_data:void,request_enable_iteration:u8,motor_override_speed_0:u16,motor_override_speed_1:u16,motor_override_speed_2:u16,motor_override_speed_3:u16,motor_override_speed_4:u16,motor_override_speed_5:u16,motor_override_speed_6:u16,motor_override_speed_7:u16,set_command_override:bool,set_state_mask:StateFields,set_state_delay:u16,set_sd_write_delay:u16,set_led:{pattern:u8,color_right:Color,color_left:Color,indicator_red:bool,indicator_green:bool},set_serial_rc:{enabled:bool,command:RcCommand,aux_mask:AuxMask},set_card_recording_state:{/8/record_to_card:void,lock_recording_state:void},set_partial_eeprom_data:Configuration,reinit_partial_eeprom_data:ConfigurationFlag,req_partial_eeprom_data:ConfigurationFlag,req_card_recording_state:void,set_partial_temporary_config:Configuration,set_command_sources:{/8/serial:void,radio:void},set_calibration:{enabled:bool,mode:u8},set_autopilot_enabled:bool,set_usb_mode:u8};DebugString={deprecated_mask:u32,message:s};HistoryData=DebugString;Response={mask:u32,ack:u32};","1.6.txt.json":'{"version":{"major":1,"minor":6,"patch":0},"id":0,"pcb_transform":{"orientation":{"x":0,"y":0,"z":0},"translation":{"x":0,"y":0,"z":0}},"mix_table":{"fz":[1,1,1,1,1,1,1,1],"tx":[1,1,1,1,-1,-1,-1,-1],"ty":[-1,1,-1,1,-1,1,-1,1],"tz":[1,-1,-1,1,1,-1,-1,1]},"mag_bias":{"offset":{"x":0,"y":0,"z":0}},"channel":{"assignment":{"thrust":2,"pitch":1,"roll":0,"yaw":3,"aux1":4,"aux2":5},"inversion":{"thrust":null,"pitch":true,"roll":true,"yaw":null,"aux1":null,"aux2":null},"midpoint":[1500,1500,1500,1500,1500,1500],"deadzone":[0,0,0,20,0,0]},"pid_parameters":{"thrust_master":{"kp":1.0,"ki":0.0,"kd":0.0,"integral_windup_guard":0.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":1.0},"pitch_master":{"kp":3.5,"ki":0.5,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.005,"setpoint_filter_time":0.005,"command_to_value":30.0},"roll_master":{"kp":3.5,"ki":0.5,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.005,"setpoint_filter_time":0.005,"command_to_value":30.0},"yaw_master":{"kp":1.0,"ki":0.0,"kd":0.0,"integral_windup_guard":0.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":180.0},"thrust_slave":{"kp":1.0,"ki":0.0,"kd":0.0,"integral_windup_guard":0.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":1.0},"pitch_slave":{"kp":5.0,"ki":2.0,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":150.0},"roll_slave":{"kp":5.0,"ki":2.0,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":150.0},"yaw_slave":{"kp":40.0,"ki":10.0,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":240.0},"thrust_gain":4095,"pitch_gain":2047,"roll_gain":2047,"yaw_gain":2047,"pid_bypass":{"thrust_master":true,"pitch_master":null,"roll_master":null,"yaw_master":true,"thrust_slave":true,"pitch_slave":null,"roll_slave":null,"yaw_slave":null}},"state_parameters":{"state_estimation":[1,0.01],"enable":[0.001,30]},"led_states":[{"status":{"crash_detected":true},"pattern":"${PATTERN_flash}","colors":"${COLOR_Orange}","indicator_red":false,"indicator_green":false},{"status":{"loop_slow":true},"pattern":"${PATTERN_solid}","colors":"${COLOR_Red}","indicator_red":false,"indicator_green":false},{"status":{"override":true},"pattern":"${PATTERN_solid}","colors":"${COLOR_LightSeaGreen}","indicator_red":false,"indicator_green":false},{"status":{"log_full":true},"pattern":"${PATTERN_flash}","colors":"${COLOR_Orange}","indicator_red":false,"indicator_green":false},{"status":{"no_signal":true},"pattern":"${PATTERN_flash}","colors":"${COLOR_Green}","indicator_red":false,"indicator_green":false},{"status":{"arming":true},"pattern":"${PATTERN_flash}","colors":"${COLOR_Blue}","indicator_red":false,"indicator_green":false},{"status":{"armed":true},"pattern":"${PATTERN_beacon}","colors":"${COLOR_Blue}","indicator_red":false,"indicator_green":false},{"status":{"idle":true},"pattern":"${PATTERN_breathe}","colors":"${COLOR_Green}","indicator_red":false,"indicator_green":false},"${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}"],"name":"FLYBRIX","velocity_pid_parameters":{"forward_master":{"kp":1,"ki":0,"kd":0,"integral_windup_guard":0,"d_filter_time":0.005,"setpoint_filter_time":0.005,"command_to_value":1},"right_master":{"kp":10,"ki":1,"kd":0,"integral_windup_guard":10,"d_filter_time":0.005,"setpoint_filter_time":0.005,"command_to_value":10},"up_master":{"kp":10,"ki":1,"kd":0,"integral_windup_guard":10,"d_filter_time":0.005,"setpoint_filter_time":0.005,"command_to_value":10},"forward_slave":{"kp":1,"ki":0,"kd":0,"integral_windup_guard":10,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":0.3},"right_slave":{"kp":10,"ki":4,"kd":0,"integral_windup_guard":30,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":30},"up_slave":{"kp":10,"ki":4,"kd":0,"integral_windup_guard":30,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":30},"pid_bypass":{"forward_master":true,"right_master":true,"up_master":true,"forward_slave":true,"right_slave":true,"up_slave":true}},"inertial_bias":{"accel":{"x":0,"y":0,"z":0},"gyro":{"x":0,"y":0,"z":0}}}',"1.7.txt":"Vector3f={x:f32,y:f32,z:f32};PIDSettings={kp:f32,ki:f32,kd:f32,integral_windup_guard:f32,d_filter_time:f32,setpoint_filter_time:f32,command_to_value:f32};Version={major:u8,minor:u8,patch:u8};ConfigID=u32;PcbTransform={orientation:Vector3f,translation:Vector3f};MixTable={fz:[i8:8],tx:[i8:8],ty:[i8:8],tz:[i8:8]};MagBias={offset:Vector3f};ChannelProperties={assignment:{thrust:u8,pitch:u8,roll:u8,yaw:u8,aux1:u8,aux2:u8},inversion:{/8/thrust:void,pitch:void,roll:void,yaw:void,aux1:void,aux2:void},midpoint:[u16:6],deadzone:[u16:6]};PIDBypass={/8/thrust_master:void,pitch_master:void,roll_master:void,yaw_master:void,thrust_slave:void,pitch_slave:void,roll_slave:void,yaw_slave:void};PIDParameters={thrust_master:PIDSettings,pitch_master:PIDSettings,roll_master:PIDSettings,yaw_master:PIDSettings,thrust_slave:PIDSettings,pitch_slave:PIDSettings,roll_slave:PIDSettings,yaw_slave:PIDSettings,thrust_gain:f32,pitch_gain:f32,roll_gain:f32,yaw_gain:f32,pid_bypass:PIDBypass};StateParameters={state_estimation:[f32:2],enable:[f32:2]};StatusFlag={/16/_0:void,_1:void,_2:void,no_signal:void,idle:void,arming:void,recording_sd:void,_7:void,loop_slow:void,_9:void,armed:void,battery_low:void,battery_critical:void,log_full:void,crash_detected:void,override:void};Color={red:u8,green:u8,blue:u8};LEDStateColors={right_front:Color,right_back:Color,left_front:Color,left_back:Color};LEDStateCase={status:StatusFlag,pattern:u8,colors:LEDStateColors,indicator_red:bool,indicator_green:bool};LEDStates=[/16/LEDStateCase:16];LEDStatesFixed=[LEDStateCase:16];DeviceName=s9;InertialBias={accel:Vector3f,gyro:Vector3f};VelocityPIDBypass={/8/forward_master:void,right_master:void,up_master:void,_unused_master:void,forward_slave:void,right_slave:void,up_slave:void,_unused_slave:void};VelocityPIDParameters={forward_master:PIDSettings,right_master:PIDSettings,up_master:PIDSettings,forward_slave:PIDSettings,right_slave:PIDSettings,up_slave:PIDSettings,pid_bypass:VelocityPIDBypass};Configuration={/16/version:Version,id:ConfigID,pcb_transform:PcbTransform,mix_table:MixTable,mag_bias:MagBias,channel:ChannelProperties,pid_parameters:PIDParameters,state_parameters:StateParameters,led_states:LEDStates,name:DeviceName,velocity_pid_parameters:VelocityPIDParameters,inertial_bias:InertialBias};ConfigurationFixed={version:Version,id:ConfigID,pcb_transform:PcbTransform,mix_table:MixTable,mag_bias:MagBias,channel:ChannelProperties,pid_parameters:PIDParameters,state_parameters:StateParameters,led_states:LEDStatesFixed,name:DeviceName,velocity_pid_parameters:VelocityPIDParameters,inertial_bias:InertialBias};ConfigurationFlag={/16/version:void,id:void,pcb_transform:void,mix_table:void,mag_bias:void,channel:void,pid_parameters:void,state_parameters:void,led_states:[//void:16],name:void,velocity_pid_parameters:void,inertial_bias:void};Rotation={pitch:f32,roll:f32,yaw:f32};PIDState={timestamp_us:u32,input:f32,setpoint:f32,p_term:f32,i_term:f32,d_term:f32};RcCommand={throttle:i16,pitch:i16,roll:i16,yaw:i16};State={/32/timestamp_us:u32,status:StatusFlag,v0_raw:u16,i0_raw:u16,i1_raw:u16,accel:Vector3f,gyro:Vector3f,mag:Vector3f,temperature:u16,pressure:u32,ppm:[i16:6],aux_chan_mask:u8,command:RcCommand,control:{fz:f32,tx:f32,ty:f32,tz:f32},pid_master_fz:PIDState,pid_master_tx:PIDState,pid_master_ty:PIDState,pid_master_tz:PIDState,pid_slave_fz:PIDState,pid_slave_tx:PIDState,pid_slave_ty:PIDState,pid_slave_tz:PIDState,motor_out:[i16:8],kinematics_angle:Rotation,kinematics_rate:Rotation,kinematics_altitude:f32,loop_count:u32};StateFields={/32/timestamp_us:void,status:void,v0_raw:void,i0_raw:void,i1_raw:void,accel:void,gyro:void,mag:void,temperature:void,pressure:void,ppm:void,aux_chan_mask:void,command:void,control:void,pid_master_fz:void,pid_master_tx:void,pid_master_ty:void,pid_master_tz:void,pid_slave_fz:void,pid_slave_tx:void,pid_slave_ty:void,pid_slave_tz:void,motor_out:void,kinematics_angle:void,kinematics_rate:void,kinematics_altitude:void,loop_count:void};AuxMask={//aux1_low:void,aux1_mid:void,aux1_high:void,aux2_low:void,aux2_mid:void,aux2_high:void};Command={/32/request_response:void,set_eeprom_data:ConfigurationFixed,reinit_eeprom_data:void,request_eeprom_data:void,request_enable_iteration:u8,motor_override_speed_0:u16,motor_override_speed_1:u16,motor_override_speed_2:u16,motor_override_speed_3:u16,motor_override_speed_4:u16,motor_override_speed_5:u16,motor_override_speed_6:u16,motor_override_speed_7:u16,set_command_override:bool,set_state_mask:StateFields,set_state_delay:u16,set_sd_write_delay:u16,set_led:{pattern:u8,color_right_front:Color,color_left_front:Color,color_right_back:Color,color_left_back:Color,indicator_red:bool,indicator_green:bool},set_serial_rc:{enabled:bool,command:RcCommand,aux_mask:AuxMask},set_card_recording_state:{/8/record_to_card:void,lock_recording_state:void},set_partial_eeprom_data:Configuration,reinit_partial_eeprom_data:ConfigurationFlag,req_partial_eeprom_data:ConfigurationFlag,req_card_recording_state:void,set_partial_temporary_config:Configuration,set_command_sources:{/8/serial:void,radio:void},set_calibration:{enabled:bool,mode:u8},set_autopilot_enabled:bool,set_usb_mode:u8};DebugString={deprecated_mask:u32,message:s};HistoryData=DebugString;Response={mask:u32,ack:u32};","1.7.txt.json":'{"version":{"major":1,"minor":7,"patch":0},"id":0,"pcb_transform":{"orientation":{"x":0,"y":0,"z":0},"translation":{"x":0,"y":0,"z":0}},"mix_table":{"fz":[1,1,1,1,1,1,1,1],"tx":[1,1,1,1,-1,-1,-1,-1],"ty":[-1,1,-1,1,-1,1,-1,1],"tz":[1,-1,-1,1,1,-1,-1,1]},"mag_bias":{"offset":{"x":0,"y":0,"z":0}},"channel":{"assignment":{"thrust":2,"pitch":1,"roll":0,"yaw":3,"aux1":4,"aux2":5},"inversion":{"thrust":null,"pitch":true,"roll":true,"yaw":null,"aux1":null,"aux2":null},"midpoint":[1500,1500,1500,1500,1500,1500],"deadzone":[0,0,0,20,0,0]},"pid_parameters":{"thrust_master":{"kp":1.0,"ki":0.0,"kd":0.0,"integral_windup_guard":0.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":1.0},"pitch_master":{"kp":3.5,"ki":0.5,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.005,"setpoint_filter_time":0.005,"command_to_value":30.0},"roll_master":{"kp":3.5,"ki":0.5,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.005,"setpoint_filter_time":0.005,"command_to_value":30.0},"yaw_master":{"kp":1.0,"ki":0.0,"kd":0.0,"integral_windup_guard":0.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":180.0},"thrust_slave":{"kp":1.0,"ki":0.0,"kd":0.0,"integral_windup_guard":0.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":1.0},"pitch_slave":{"kp":5.0,"ki":2.0,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":150.0},"roll_slave":{"kp":5.0,"ki":2.0,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":150.0},"yaw_slave":{"kp":40.0,"ki":10.0,"kd":0.0,"integral_windup_guard":300.0,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":240.0},"thrust_gain":4095,"pitch_gain":2047,"roll_gain":2047,"yaw_gain":2047,"pid_bypass":{"thrust_master":true,"pitch_master":null,"roll_master":null,"yaw_master":true,"thrust_slave":true,"pitch_slave":null,"roll_slave":null,"yaw_slave":null}},"state_parameters":{"state_estimation":[1,0.01],"enable":[0.001,30]},"led_states":[{"status":{"crash_detected":true},"pattern":"${PATTERN_flash}","colors":"${COLOR_Orange}","indicator_red":false,"indicator_green":false},{"status":{"loop_slow":true},"pattern":"${PATTERN_solid}","colors":"${COLOR_Red}","indicator_red":false,"indicator_green":false},{"status":{"override":true},"pattern":"${PATTERN_solid}","colors":"${COLOR_LightSeaGreen}","indicator_red":false,"indicator_green":false},{"status":{"log_full":true},"pattern":"${PATTERN_flash}","colors":"${COLOR_Orange}","indicator_red":false,"indicator_green":false},{"status":{"no_signal":true},"pattern":"${PATTERN_flash}","colors":"${COLOR_Green}","indicator_red":false,"indicator_green":false},{"status":{"arming":true},"pattern":"${PATTERN_flash}","colors":"${COLOR_Blue}","indicator_red":false,"indicator_green":false},{"status":{"armed":true},"pattern":"${PATTERN_beacon}","colors":"${COLOR_Blue}","indicator_red":false,"indicator_green":false},{"status":{"idle":true},"pattern":"${PATTERN_breathe}","colors":"${COLOR_Green}","indicator_red":false,"indicator_green":false},"${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}","${LED_unused_mode}"],"name":"FLYBRIX","velocity_pid_parameters":{"forward_master":{"kp":1,"ki":0,"kd":0,"integral_windup_guard":0,"d_filter_time":0.005,"setpoint_filter_time":0.005,"command_to_value":1},"right_master":{"kp":10,"ki":1,"kd":0,"integral_windup_guard":10,"d_filter_time":0.005,"setpoint_filter_time":0.005,"command_to_value":10},"up_master":{"kp":10,"ki":1,"kd":0,"integral_windup_guard":10,"d_filter_time":0.005,"setpoint_filter_time":0.005,"command_to_value":10},"forward_slave":{"kp":1,"ki":0,"kd":0,"integral_windup_guard":10,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":0.3},"right_slave":{"kp":10,"ki":4,"kd":0,"integral_windup_guard":30,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":30},"up_slave":{"kp":10,"ki":4,"kd":0,"integral_windup_guard":30,"d_filter_time":0.001,"setpoint_filter_time":0.001,"command_to_value":30},"pid_bypass":{"forward_master":true,"right_master":true,"up_master":true,"forward_slave":true,"right_slave":true,"up_slave":true}},"inertial_bias":{"accel":{"x":0,"y":0,"z":0},"gyro":{"x":0,"y":0,"z":0}}}'}}}e.$inject=[],angular.module("flybrixCommon").factory("descriptorsHandler",e)}(),function(){"use strict";function e(a,r){return{magnetometer:function(){return a("Calibrating magnetometer bias"),r.sendStructure("Command",{request_response:!0,set_calibration:{enabled:!0,mode:0}},!1)},accelerometer:{flat:e.bind(null,"flat",0),forward:e.bind(null,"lean forward",1),back:e.bind(null,"lean back",2),right:e.bind(null,"lean right",3),left:e.bind(null,"lean left",4)},finish:function(){return a("Finishing calibration"),r.sendStructure("Command",{request_response:!0,set_calibration:{enabled:!1,mode:0}},!1)}};function e(e,t){return a("Calibrating gravity for pose: "+e),r.sendStructure("Command",{request_response:!0,set_calibration:{enabled:!0,mode:t+1}},!1)}}angular.module("flybrixCommon").factory("calibration",e),e.$inject=["commandLog","serial"]}(),function(){"use strict";function e(e){void 0===e&&(e=2e3),this.N=e,this.buffer=new Uint8Array(e),this.ready_for_new_message=!0,this.buffer_length=0}function d(e){for(var t=0,a=0,r=0,i=!1;e.buffer[t];)r?(--r,e.buffer[a++]=e.buffer[t++]):(i&&(e.buffer[a++]=0),i=(r=e.buffer[t++]-1)<254);return r?0:a}function t(e){for(var t=new Uint8Array(Math.floor((255*e.byteLength+761)/254)),a=1,r=0,i=0;i<e.length;++i){254==t[r]&&(t[r]=255,t[r=a++]=0);var o=e[i];++t[r],o?t[a++]=o:t[r=a++]=0}return t.subarray(0,a).slice().buffer}angular.module("flybrixCommon").factory("cobs",function(){return{Reader:e,encode:t}}),e.prototype.readBytes=function(e,t,a){for(var r=0;r<e.length;r++){var i=e[r];if(this.ready_for_new_message&&(this.ready_for_new_message=!1,this.buffer_length=0),this.buffer[this.buffer_length++]=i)this.buffer_length===this.N&&(a("overflow","buffer overflow in COBS decoding"),this.ready_for_new_message=!0);else{this.buffer_length=d(this);var o,n=0===this.buffer_length;for(n&&(this.buffer[0]=1),o=1;o<this.buffer_length;++o)this.buffer[0]^=this.buffer[o];if(0===this.buffer[0])this.ready_for_new_message=!0,0<this.buffer_length?t(this.buffer.slice(1,this.buffer_length)):a("short","Too short packet");else{this.ready_for_new_message=!0;var _="",s="";for(o=0;o<this.buffer_length;o++)_+=this.buffer[o]+",",s+=String.fromCharCode(this.buffer[o]);if(n)a("frame","Unexpected ending of packet");else a("checksum","BAD CHECKSUM ("+this.buffer_length+" bytes)"+_+s)}}}}}(),function(){"use strict";function e(e){var t=[],a=e.defer(),r=i;return r.log=i,r.clearSubscribers=function(){a=e.defer()},r.onMessage=function(e){return a.promise.then(void 0,void 0,e)},r.read=o,r;function i(e){void 0!==e&&(t.push(e),a.notify(o()))}function o(){return t}}angular.module("flybrixCommon").factory("commandLog",e),e.$inject=["$q"]}(),function(){"use strict";function e(n,a,_,r){var s,i=function(){a("No callback defined for receiving configurations!")},o=function(){a("No callback defined for receiving logging state! Callback arguments: (isLogging, isLocked, delay)")};function d(){var e=_.serializationHandler();return a("Requesting current configuration data..."),n.sendStructure("Command",{request_response:!0,req_partial_eeprom_data:e.ConfigurationFlag.empty()},!1)}function t(e){var t=_.serializationHandler(),a=e.mask||t.ConfigurationFlag.empty(),r=e.config||s,i=e.requestUpdate||!1,o={request_response:!0};return e.temporary?(o.set_partial_temporary_config=r,a={set_partial_temporary_config:a}):(o.set_partial_eeprom_data=r,a={set_partial_eeprom_data:a}),n.sendStructure("Command",o,!0,a).then(function(){i&&d()})}function l(e){var t=[(s=r.updateFields(s,e)).version.major,s.version.minor,s.version.patch];_.set(t),_.supported()?(a("Received configuration data (v"+t[0]+"."+t[1]+"."+t[2]+")"),i()):(a("Received an unsupported configuration!"),a("Found version: "+t[0]+"."+t[1]+"."+t[2]+" --- Newest version: "+_.desiredKey()))}return n.addOnReceiveCallback(function(e,t){if("Command"===e&&("set_eeprom_data"in t&&l(t.set_eeprom_data),"set_partial_eeprom_data"in t&&l(t.set_partial_eeprom_data),"set_card_recording_state"in t&&"set_sd_write_delay"in t)){var a=t.set_card_recording_state,r=t.set_sd_write_delay;o(a.record_to_card,a.lock_recording_state,r)}}),s=_.serializationHandler().Configuration.empty(),{request:d,reinit:function(){return a("Setting factory default configuration data..."),n.sendStructure("Command",{request_response:!0,reinit_eeprom_data:!0},!1).then(function(){return d()},function(e){a("Request for factory reset failed: "+e)})},send:function(e){return t({config:e,temporary:!1,requestUpdate:!0})},sendConfig:t,getConfig:function(){return s},setConfigCallback:function(e){i=e},setLoggingCallback:function(e){o=e},getDesiredVersion:function(){return _.desired()}}}angular.module("flybrixCommon").factory("deviceConfig",e),e.$inject=["serial","commandLog","firmwareVersion","serializationHandler"]}(),function(){"use strict";function e(){var n={},t={none:0,solid:5,flash:1,breathe:3,beacon:2,alternate:4};Object.keys(t).forEach(function(e){n["PATTERN_"+e]=JSON.stringify(t[e])});var _={Plaid:{red:204,green:85,blue:51},DarkMagenta:{red:139,green:0,blue:139},Red:{red:255,green:0,blue:0},OrangeRed:{red:255,green:69,blue:0},Orange:{red:255,green:165,blue:0},Yellow:{red:255,green:255,blue:0},White:{red:255,green:255,blue:255},Black:{red:0,green:0,blue:0},Blue:{red:0,green:0,blue:255},LightSeaGreen:{red:32,green:178,blue:170},Green:{red:0,green:128,blue:0}};Object.keys(_).forEach(function(e){var t,a,r,i,o;n["COLOR_"+e]=JSON.stringify((t=_[e],a=26/256,r=Math.max(0,Math.min(255,Math.round(a*t.red))),i=Math.max(0,Math.min(255,Math.round(a*t.green))),o=Math.max(0,Math.min(255,Math.round(a*t.blue))),{right_front:{red:r,green:i,blue:o},right_back:{red:r,green:i,blue:o},left_front:{red:r,green:i,blue:o},left_back:{red:r,green:i,blue:o}}))}),n.LED_unused_mode='{"status":{},"pattern":'+n.PATTERN_none+',"colors":'+n.COLOR_Black+',"indicator_red":false,"indicator_green":false}';var a=/"\${(\w+)}"/g,r=function(e,t){if(t in n)return n[t];throw new Error('Constant "'+t+'" is not supported by this version of flybrix-common.')};return{parse:function(e){return JSON.parse(e.replace(a,r))}}}angular.module("flybrixCommon").factory("deviceConfigParser",e),e.$inject=[]}(),function(){"use strict";function e(t){var a=[0,0,0],r="0.0.0",e=t.getNewestVersion(),i=[e.major,e.minor,e.patch],o=i[0].toString()+"."+i[1].toString()+"."+i[2].toString(),n=t.getHandler(o),_=t.getDefaults(o),s=n,d=_;return{set:function(e){r=(a=e).join("."),s=t.getHandler(o)||n,d=t.getDefaults(o)||_},get:function(){return a},key:function(){return r},supported:function(){return!!t.getHandler(r)},desired:function(){return i},desiredKey:function(){return o},serializationHandler:function(){return s},defaults:function(){return d}}}angular.module("flybrixCommon").factory("firmwareVersion",e),e.$inject=["serializationHandler"]}(),function(){"use strict";function e(s,d){var l={NO_OVERRIDE:0,FLASH:1,BEACON:2,BREATHE:3,ALTERNATE:4,SOLID:5},u=!1,m={red:0,green:0,blue:0};function i(e,t,a,r,i,o,n){if(!u&&d.busy())return s.reject("Serial connection is too busy");u=!1,(i=i||l.NO_OVERRIDE)<0?i=l.NO_OVERRIDE:5<i&&(i=l.SOLID);var _={pattern:i,color_right:e||m,color_left:a||m,color_right_front:e||m,color_left_front:a||m,color_right_back:t||m,color_left_back:r||m,indicator_red:o,indicator_green:n};return d.sendStructure("Command",{request_response:!0,set_led:_},!1)}function e(){u=!0}return{set:i,setSimple:function(e,t,a){var r={red:e||0,green:t||0,blue:a||0};return i(r,r,r,r,l.SOLID)},clear:function(){return e(),i()},patterns:l,forceNextSend:e}}angular.module("flybrixCommon").factory("led",e),e.$inject=["$q","serial"]}(),function(){"use strict";function e(a){var e={LOW:0,MID:1,HIGH:2},r=["low","mid","high"],i=-1,o=0,n=0,_=0,s=e.HIGH,d=e.HIGH,l=!0;return{setThrottle:function(e){i=e},setPitch:function(e){o=e},setRoll:function(e){n=e},setYaw:function(e){_=e},setAux1:function(e){s=Math.max(0,Math.min(2,e))},setAux2:function(e){d=Math.max(0,Math.min(2,e))},getThrottle:function(){return i},getPitch:function(){return o},getRoll:function(){return n},getYaw:function(){return _},getAux1:function(){return s},getAux2:function(){return d},AUX:e,send:function(){if(!l&&a.busy())return;l=!1;var e={};e.throttle=u(4095*(i- -.8)/1.8,0,4095),e.pitch=u(4095*-m(o,.1)/2,-2047,2047),e.roll=u(4095*m(n,.1)/2,-2047,2047),e.yaw=u(4095*-m(_,.1)/2,-2047,2047);var t={};return t["aux1_"+r[s]]=!0,t["aux2_"+r[d]]=!0,a.sendStructure("Command",{request_response:!0,set_serial_rc:{enabled:!0,command:e,aux_mask:t}},!1)},forceNextSend:function(){l=!0}};function u(e,t,a){return Math.max(t,Math.min(e,a))}function m(e,t){return t<e?e-t:e<-t?e+t:0}}angular.module("flybrixCommon").factory("rcData",e),e.$inject=["serial"]}(),function(){"use strict";function e(f,p,v,g,h,b){var y={State:0,Command:1,DebugString:3,HistoryData:4,Protocol:128,Response:255},k=[],D=new e,o=[],t=new v.Reader(1e4),a=void 0;function e(){}e.prototype.busy=function(){return!1},e.prototype.send=function(e){g('No "send" defined for serial backend')},e.prototype.onRead=function(e){g('No "onRead" defined for serial backend')};var n,_=[];return Object.keys(y).forEach(function(e){_[y[e]]=e}),d(function(e,t){if("Response"===e)!function(e,t){for(;0<k.length;){var a=k.shift();if(!(a.mask^e)){var r=e;if((r&=-2)^t){a.response.reject("Request was not fully processed");break}a.response.resolve();break}a.response.reject("Missing ACK")}}(t.mask,t.ack);else if("Protocol"===e){var a=t.response;a&&b.addHandler(a.version,a.structure)}}),{busy:function(){return D.busy()},sendStructure:r,setBackend:function(e){(D=e).onRead=i},addOnReceiveCallback:d,removeOnReceiveCallback:function(t){o=o.filter(function(e){return e!==t})},setBytesHandler:function(e){a=e},handlePostConnect:function(){return r("Command",{request_response:!0,req_partial_eeprom_data:{version:!0}})},Backend:e};function r(e,t,a,r){"State"===e&&(t=function(e){"temperature"in(e=Object.assign({},e))&&(e.temperature*=100);"pressure"in e&&(e.pressure*=256);return e}(t));var i=h.serializationHandler(),o=p.defer();if(!(e in y))return o.reject('Message type "'+e+'" not supported by app, supported message types are:'+Object.keys(y).join(", ")),o.promise;if(!(e in i))return o.reject('Message type "'+e+'" not supported by firmware, supported message types are:'+Object.keys(i).join(", ")),o.promise;var n=y[e],_=i[e],s=new Uint8Array(_.byteCount),d=new b.Serializer(new DataView(s.buffer));_.encode(d,t,r);var l=_.maskArray(t,r);l.length<5&&(l=l[0]<<0|l[1]<<8|l[2]<<16|l[3]<<24);var u=d.index,m=new Uint8Array(u+3);m[0]=m[1]=n;for(var c=0;c<u;++c)m[0]^=m[c+2]=s[c];return m[u+2]=0,k.push({mask:l,response:o}),f(function(){D.send(new Uint8Array(v.encode(m)))},0),a&&g("Sending command "+n),o.promise}function i(e){a?a(e,l):t.readBytes(e,l,s)}function s(e,t){g("COBS decoding failed ("+e+"): "+t)}function d(e){o=o.concat([e])}function l(e){var t=_[e[0]],a=h.serializationHandler()[t];if(t&&a){try{var r=new b.Serializer(new DataView(e.buffer,1)),i=a.decode(r)}catch(e){g("Unrecognized message format received")}"State"===t&&(i=function(e){e=Object.assign({},e);"timestamp_us"in e&&(e.serial_update_rate_estimate=1e6/(e.timestamp_us-n),n=e.timestamp_us);"temperature"in e&&(e.temperature/=100);"pressure"in e&&(e.pressure/=256);return e}(i)),o.forEach(function(e){e(t,i)})}else g("Illegal message type passed from firmware")}}angular.module("flybrixCommon").factory("serial",e),e.$inject=["$timeout","$q","cobs","commandLog","firmwareVersion","serializationHandler"]}(),function(){"use strict";function e(e,i){var o={},n={},_={major:0,minor:0,patch:0};function s(e){return e.major!==_.major?e.major>_.major:e.minor!==_.minor?e.minor>_.minor:e.patch>_.patch}function d(e){return e.major.toString()+"."+e.minor.toString()+"."+e.patch.toString()}function l(e,t,a){s(e)&&(_={major:e.major,minor:e.minor,patch:e.patch});var r=d(e);o[r]=FlybrixSerialization.parse(t),n[r]=i.parse(a)}function u(e,t){s(e)&&(_={major:e.major,minor:e.minor,patch:e.patch});var a=d(e),r=d(t);o[a]=o[r],n[a]=n[r]}var m=e.versions,c=e.files,f={};function p(e,t){return t instanceof Array?function(e,t){for(var a=Math.max(e.length,t.length),r=[],i=0;i<a;++i)r.push(p(e[i],t[i]));return r}(e,t):t instanceof Object?(a=e,r=t,i={},Object.keys(a).forEach(function(e){i[e]=p(a[e],r[e])}),Object.keys(r).forEach(function(e){e in i||(i[e]=p(a[e],r[e]))}),i):!(!0===e&&!t)&&(null==t?e:t);var a,r,i}return Object.keys(m).forEach(function(e){var t,a=(t=e.split("."),{major:parseInt(t[0]),minor:parseInt(t[1]),patch:parseInt(t[2])}),r=m[e];r in f?u(a,f[r]):(r=m[e],l(a,c[r],c[r+".json"]),f[r]=a)}),{Serializer:FlybrixSerialization.Serializer,getDefaults:function(e){return n[e]},getHandler:function(e){return o[e]},getNewestVersion:function(){return _},addHandler:l,copyHandler:u,updateFields:p}}e.$inject=["descriptorsHandler","deviceConfigParser"],angular.module("flybrixCommon").factory("serializationHandler",e)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
