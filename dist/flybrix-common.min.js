!function(){"use strict";angular.module("flybrixCommon",[])}(),function(){"use strict";function e(){return{Reader:t,encode:a}}function t(e){void 0===e&&(e=2e3),this.N=e,this.buffer=new Uint8Array(e),this.ready_for_new_message=!0,this.buffer_length=0}function r(e){for(var t=0,r=0,a=0,n=!1;e.buffer[t];)a?(--a,e.buffer[r++]=e.buffer[t++]):(n&&(e.buffer[r++]=0),a=e.buffer[t++]-1,n=a<254);return a?0:r}function a(e){for(var t=new Uint8Array(Math.floor((255*e.byteLength+761)/254)),r=1,a=0,n=0;n<e.length;++n){254==t[a]&&(t[a]=255,a=r++,t[a]=0);var i=e[n];++t[a],i?t[r++]=i:(a=r++,t[a]=0)}return t.subarray(0,r).slice().buffer}angular.module("flybrixCommon").factory("cobs",e),t.prototype.AppendToBuffer=function(e,t,a){for(var n=0;n<e.length;n++){var i=e[n];if(this.ready_for_new_message&&(this.ready_for_new_message=!1,this.buffer_length=0),this.buffer[this.buffer_length++]=i,i&&this.buffer_length==this.N)a("overflow","buffer overflow in COBS decoding"),this.ready_for_new_message=!0;else if(!i){this.buffer_length=r(this);var s=0===this.buffer_length;s&&(this.buffer[0]=1);for(var o=1;o<this.buffer_length;++o)this.buffer[0]^=this.buffer[o];if(0===this.buffer[0])if(this.ready_for_new_message=!0,this.buffer_length>5){for(var _=this.buffer[1],T=0,A=0;A<4;++A)T|=this.buffer[A+2]<<8*A;t(_,T,this.buffer.subarray(6,this.buffer_length).slice().buffer)}else a("short","Too short packet");else{this.ready_for_new_message=!0;for(var f="",l="",o=0;o<this.buffer_length;o++)f+=this.buffer[o]+",",l+=String.fromCharCode(this.buffer[o]);if(s)a("frame","Unexpected ending of packet");else{var d="BAD CHECKSUM ("+this.buffer_length+" bytes)"+f+l;a("checksum",d)}}}}}}(),function(){"use strict";function e(e){function t(e){void 0!==e&&(i.push(e),s.notify(r()))}function r(){return i}function a(){s=e.defer()}function n(e){return s.promise.then(void 0,void 0,e)}var i=[],s=e.defer(),o=t;return o.log=t,o.clearSubscribers=a,o.onMessage=n,o.read=r,o}angular.module("flybrixCommon").factory("commandLog",e),e.$inject=["$q"]}(),function(){"use strict";function e(){return t}function t(){this.index=0}angular.module("flybrixCommon").factory("serializer",e),t.prototype.add=function(e){this.index+=e},[["Float32",4],["Int16",2],["Int8",1],["Uint8",1],["Uint16",2]].forEach(function(e){var r=e[0],a=e[1],n="get"+r,i="set"+r;t.prototype["parse"+r+"Array"]=function(e,t){for(var r=0;r<t.length;r++)t[r]=e[n](this.index,1),this.add(a)},t.prototype["set"+r+"Array"]=function(e,t){for(var r=0;r<t.length;r++)e[i](this.index,t[r],1),this.add(a)}})}(),function(){"use strict";function e(e,t){function r(){this.timestamp_us=0,this.status=0,this.V0_raw=0,this.I0_raw=0,this.I1_raw=0,this.accel=[0,0,0],this.gyro=[0,0,0],this.mag=[0,0,0],this.temperature=0,this.pressure=0,this.ppm=[0,0,0,0,0,0],this.AUX_chan_mask=0,this.command=[0,0,0,0],this.control=[0,0,0,0],this.pid_master_Fz=[0,0,0,0,0,0],this.pid_master_Tx=[0,0,0,0,0,0],this.pid_master_Ty=[0,0,0,0,0,0],this.pid_master_Tz=[0,0,0,0,0,0],this.pid_slave_Fz=[0,0,0,0,0,0],this.pid_slave_Tx=[0,0,0,0,0,0],this.pid_slave_Ty=[0,0,0,0,0,0],this.pid_slave_Tz=[0,0,0,0,0,0],this.MotorOut=[0,0,0,0,0,0,0,0],this.kinematicsAngle=[0,0,0],this.kinematicsRate=[0,0,0],this.kinematicsAltitude=0,this.loopCount=0}function a(e,t,r,a,i,s){n(e,t,r,function(){o(t,r,a)},i,s)}function n(t,r,a,n,s,o){switch(t){case _.State:n(r,a);break;case _.Command:s(r,a);break;case _.DebugString:var T=i(a);e('Received <span style="color: orange">DEBUG</span>: '+T);break;case _.HistoryData:var T=i(a);e('Received <span style="color: orange">HISTORY DATA</span>');break;case _.Response:var A=new DataView(a,0);o(r,A.getInt32(0,1))}}function i(e){return String.fromCharCode.apply(null,new Uint8Array(e))}function s(e,t,r){t[0]=e.getUint32(r.index,1),r.add(4);for(var a=1;a<6;a++)t[a]=e.getFloat32(r.index,1),r.add(4)}function o(e,a,n){var i=new r,o=[],_=new DataView(a,0),T=new t,f=0;0!=(e&A.STATE_MICROS)&&(o[0]=!0,i.timestamp_us=_.getUint32(T.index,1),T.add(4),f=1e6/(i.timestamp_us-l),l=i.timestamp_us),0!=(e&A.STATE_STATUS)&&(o[1]=!0,i.status=_.getUint16(T.index,1),T.add(2)),0!=(e&A.STATE_V0)&&(o[2]=!0,i.V0_raw=_.getUint16(T.index,1),T.add(2)),0!=(e&A.STATE_I0)&&(o[3]=!0,i.I0_raw=_.getUint16(T.index,1),T.add(2)),0!=(e&A.STATE_I1)&&(o[4]=!0,i.I1_raw=_.getUint16(T.index,1),T.add(2)),0!=(e&A.STATE_ACCEL)&&(o[5]=!0,T.parseFloat32Array(_,i.accel)),0!=(e&A.STATE_GYRO)&&(o[6]=!0,T.parseFloat32Array(_,i.gyro)),0!=(e&A.STATE_MAG)&&(o[7]=!0,T.parseFloat32Array(_,i.mag)),0!=(e&A.STATE_TEMPERATURE)&&(o[8]=!0,i.temperature=_.getUint16(T.index,1)/100,T.add(2)),0!=(e&A.STATE_PRESSURE)&&(o[9]=!0,i.pressure=_.getUint32(T.index,1)/256,T.add(4)),0!=(e&A.STATE_RX_PPM)&&(o[10]=!0,T.parseInt16Array(_,i.ppm)),0!=(e&A.STATE_AUX_CHAN_MASK)&&(o[11]=!0,i.AUX_chan_mask=_.getUint8(T.index,1),T.add(1)),0!=(e&A.STATE_COMMANDS)&&(o[12]=!0,T.parseInt16Array(_,i.command)),0!=(e&A.STATE_F_AND_T)&&(o[13]=!0,T.parseFloat32Array(_,i.control)),0!=(e&A.STATE_PID_FZ_MASTER)&&(o[15]=!0,s(_,i.pid_master_Fz,T)),0!=(e&A.STATE_PID_TX_MASTER)&&(o[16]=!0,s(_,i.pid_master_Tx,T)),0!=(e&A.STATE_PID_TY_MASTER)&&(o[17]=!0,s(_,i.pid_master_Ty,T)),0!=(e&A.STATE_PID_TZ_MASTER)&&(o[18]=!0,s(_,i.pid_master_Tz,T)),0!=(e&A.STATE_PID_FZ_SLAVE)&&(o[19]=!0,s(_,i.pid_slave_Fz,T)),0!=(e&A.STATE_PID_TX_SLAVE)&&(o[20]=!0,s(_,i.pid_slave_Tx,T)),0!=(e&A.STATE_PID_TY_SLAVE)&&(o[21]=!0,s(_,i.pid_slave_Ty,T)),0!=(e&A.STATE_PID_TZ_SLAVE)&&(o[22]=!0,s(_,i.pid_slave_Tz,T)),0!=(e&A.STATE_MOTOR_OUT)&&(o[23]=!0,T.parseInt16Array(_,i.MotorOut)),0!=(e&A.STATE_KINE_ANGLE)&&(o[24]=!0,T.parseFloat32Array(_,i.kinematicsAngle)),0!=(e&A.STATE_KINE_RATE)&&(o[25]=!0,T.parseFloat32Array(_,i.kinematicsRate)),0!=(e&A.STATE_KINE_ALTITUDE)&&(o[26]=!0,i.kinematicsAltitude=_.getFloat32(T.index,1),T.add(4)),0!=(e&A.STATE_LOOP_COUNT)&&(o[27]=!0,i.loopCount=_.getUint32(T.index,1),T.add(4)),n(i,o,f)}var _={State:0,Command:1,DebugString:3,HistoryData:4,Response:255},T={COM_REQ_RESPONSE:1,COM_SET_EEPROM_DATA:2,COM_REINIT_EEPROM_DATA:4,COM_REQ_EEPROM_DATA:8,COM_REQ_ENABLE_ITERATION:16,COM_MOTOR_OVERRIDE_SPEED_0:32,COM_MOTOR_OVERRIDE_SPEED_1:64,COM_MOTOR_OVERRIDE_SPEED_2:128,COM_MOTOR_OVERRIDE_SPEED_3:256,COM_MOTOR_OVERRIDE_SPEED_4:512,COM_MOTOR_OVERRIDE_SPEED_5:1024,COM_MOTOR_OVERRIDE_SPEED_6:2048,COM_MOTOR_OVERRIDE_SPEED_7:4096,COM_MOTOR_OVERRIDE_SPEED_ALL:8160,COM_SET_COMMAND_OVERRIDE:8192,COM_SET_STATE_MASK:16384,COM_SET_STATE_DELAY:32768,COM_REQ_HISTORY:65536,COM_SET_LED:1<<17,COM_SET_SERIAL_RC:1<<18,COM_SET_CARD_RECORDING:1<<19,COM_SET_PARTIAL_EEPROM_DATA:1<<20,COM_REINIT_PARTIAL_EEPROM_DATA:1<<21,COM_REQ_PARTIAL_EEPROM_DATA:1<<22,COM_REQ_CARD_RECORDING_STATE:1<<23},A={STATE_ALL:4294967295,STATE_NONE:0,STATE_MICROS:1,STATE_STATUS:2,STATE_V0:4,STATE_I0:8,STATE_I1:16,STATE_ACCEL:32,STATE_GYRO:64,STATE_MAG:128,STATE_TEMPERATURE:256,STATE_PRESSURE:512,STATE_RX_PPM:1024,STATE_AUX_CHAN_MASK:2048,STATE_COMMANDS:4096,STATE_F_AND_T:8192,STATE_PID_FZ_MASTER:32768,STATE_PID_TX_MASTER:65536,STATE_PID_TY_MASTER:1<<17,STATE_PID_TZ_MASTER:1<<18,STATE_PID_FZ_SLAVE:1<<19,STATE_PID_TX_SLAVE:1<<20,STATE_PID_TY_SLAVE:1<<21,STATE_PID_TZ_SLAVE:1<<22,STATE_MOTOR_OUT:1<<23,STATE_KINE_ANGLE:1<<24,STATE_KINE_RATE:1<<25,STATE_KINE_ALTITUDE:1<<26,STATE_LOOP_COUNT:1<<27},f={STATUS_BOOT:1,STATUS_MPU_FAIL:2,STATUS_BMP_FAIL:4,STATUS_RX_FAIL:8,STATUS_IDLE:16,STATUS_ENABLING:32,STATUS_CLEAR_MPU_BIAS:64,STATUS_SET_MPU_BIAS:128,STATUS_FAIL_STABILITY:256,STATUS_FAIL_ANGLE:512,STATUS_ENABLED:1024,STATUS_BATTERY_LOW:2048,STATUS_TEMP_WARNING:4096,STATUS_LOG_FULL:8192,STATUS_UNPAIRED:16384,STATUS_OVERRIDE:32768},l=0;return{processBinaryDatastream:a,MessageType:_,CommandFields:T,StatusCodes:f}}angular.module("flybrixCommon").factory("parser",e),e.$inject=["commandLog","serializer"]}(),function(){"use strict";function e(e,t,r,a,n){function i(){}function s(e){m=e,m.onRead=A}function o(i,s,o){void 0===o&&(o=!0);var _=t.defer();i|=n.CommandFields.COM_REQ_RESPONSE;var T,A,f=0;if("object"==typeof s){var l=7+s.length;A=new Uint8Array(l),f^=A[1]=n.MessageType.Command;for(var d=0;d<4;++d)f^=A[d+2]=c(i,d);for(var d=0;d<s.length;d++)f^=A[d+6]=s[d]}else{T=new ArrayBuffer(8),A=new Uint8Array(T),f^=A[1]=n.MessageType.Command;for(var d=0;d<4;++d)f^=A[d+2]=c(i,d);f^=A[6]=s}return A[0]=f,A[A.length-1]=0,S.push({mask:i,response:_}),e(function(){m.send(new Uint8Array(r.encode(A)))},0),o&&a('Sending command <span style="color:blue">'+n.MessageType.Command+"</blue>"),_.promise}function _(){return m.busy()}function T(e){I=e}function A(e){I?I(e,u):y.AppendToBuffer(e,u,f)}function f(e,t){a("COBS decoding failed ("+e+"): "+t)}function l(e){h=e}function d(e){p=e}function E(e,t){for(;S.length>0;){var r=S.shift();{if(r.mask===e){var a=e;if(a&=~n.CommandFields.COM_REQ_RESPONSE,a!==t){r.response.reject("Request was not fully processed");break}r.response.resolve();break}r.response.reject("Missing ACK")}}}function u(e,t,r){n.processBinaryDatastream(e,t,r,h,p,E)}function c(e,t){return e>>8*t&255}var S=[],m=new i,h=function(){a("No state listener defined for serial")},p=function(){a("No command listener defined for serial")},y=new r.Reader(2e3),I=void 0;return i.prototype.busy=function(){return!1},i.prototype.send=function(e){a('No "send" defined for serial backend')},i.prototype.onRead=function(e){a('No "onRead" defined for serial backend')},{busy:_,field:n.CommandFields,send:o,setBackend:s,setStateCallback:l,setCommandCallback:d,setDataHandler:T,Backend:i}}angular.module("flybrixCommon").factory("serial",e),e.$inject=["$timeout","$q","cobs","commandLog","parser"]}(),function(){"use strict";function e(e,t,r){function a(){return p}function n(){t("Requesting current configuration data..."),e.send(e.field.COM_REQ_EEPROM_DATA,[],!1)}function i(){t("Setting factory default configuration data..."),e.send(e.field.COM_REINIT_EEPROM_DATA,[],!1).then(function(){n()},function(e){t("Request for factory reset failed: "+e)})}function s(r){void 0===r&&(r=h),t("Sending new configuration data...");var a=new ArrayBuffer(m),i=new DataView(a,0);f(i,r);var s=new Uint8Array(a);e.send(e.field.COM_SET_EEPROM_DATA,s,!1).then(function(){n()})}function o(){this.version=[0,0,0],this.id=0,this.pcbOrientation=[0,0,0],this.pcbTranslation=[0,0,0],this.mixTableFz=[0,0,0,0,0,0,0,0],this.mixTableTx=[0,0,0,0,0,0,0,0],this.mixTableTy=[0,0,0,0,0,0,0,0],this.mixTableTz=[0,0,0,0,0,0,0,0],this.magBias=[0,0,0],this.assignedChannel=[0,0,0,0,0,0],this.commandInversion=0,this.channelMidpoint=[0,0,0,0,0,0],this.channelDeadzone=[0,0,0,0,0,0],this.thrustMasterPIDParameters=[0,0,0,0,0,0,0],this.pitchMasterPIDParameters=[0,0,0,0,0,0,0],this.rollMasterPIDParameters=[0,0,0,0,0,0,0],this.yawMasterPIDParameters=[0,0,0,0,0,0,0],this.thrustSlavePIDParameters=[0,0,0,0,0,0,0],this.pitchSlavePIDParameters=[0,0,0,0,0,0,0],this.rollSlavePIDParameters=[0,0,0,0,0,0,0],this.yawSlavePIDParameters=[0,0,0,0,0,0,0],this.pidBypass=0,this.stateEstimationParameters=[0,0],this.enableParameters=[0,0],this.ledStates=Array.apply(null,Array(272)).map(function(){return 0})}function _(e,t,r){e.parseFloat32Array(t,r)}function T(e,t){var a=new r;a.parseInt8Array(e,t.version),t.id=e.getUint32(a.index,1),a.add(4),a.parseFloat32Array(e,t.pcbOrientation),a.parseFloat32Array(e,t.pcbTranslation),a.parseInt8Array(e,t.mixTableFz),a.parseInt8Array(e,t.mixTableTx),a.parseInt8Array(e,t.mixTableTy),a.parseInt8Array(e,t.mixTableTz),a.parseFloat32Array(e,t.magBias),a.parseUint8Array(e,t.assignedChannel),t.commandInversion=e.getUint8(a.index),a.add(1),a.parseUint16Array(e,t.channelMidpoint),a.parseUint16Array(e,t.channelDeadzone),_(a,e,t.thrustMasterPIDParameters),_(a,e,t.pitchMasterPIDParameters),_(a,e,t.rollMasterPIDParameters),_(a,e,t.yawMasterPIDParameters),_(a,e,t.thrustSlavePIDParameters),_(a,e,t.pitchSlavePIDParameters),_(a,e,t.rollSlavePIDParameters),_(a,e,t.yawSlavePIDParameters),t.pidBypass=e.getUint8(a.index),a.add(1),a.parseFloat32Array(e,t.stateEstimationParameters),a.parseFloat32Array(e,t.enableParameters),a.parseUint8Array(e,t.ledStates)}function A(e,t){var a=new r,n=e.getUint16(a.index,1);if(a.add(2),n&P.VERSION&&a.parseInt8Array(e,t.version),n&P.ID&&(t.id=e.getUint32(a.index,1),a.add(4)),n&P.PCB&&(a.parseFloat32Array(e,t.pcbOrientation),a.parseFloat32Array(e,t.pcbTranslation)),n&P.MIX_TABLE&&(a.parseInt8Array(e,t.mixTableFz),a.parseInt8Array(e,t.mixTableTx),a.parseInt8Array(e,t.mixTableTy),a.parseInt8Array(e,t.mixTableTz)),n&P.MAG_BIAS&&a.parseFloat32Array(e,t.magBias),n&P.CHANNEL&&(a.parseUint8Array(e,t.assignedChannel),t.commandInversion=e.getUint8(a.index),a.add(1),a.parseUint16Array(e,t.channelMidpoint),a.parseUint16Array(e,t.channelDeadzone)),n&P.PID_PARAMETERS&&(_(a,e,t.thrustMasterPIDParameters),_(a,e,t.pitchMasterPIDParameters),_(a,e,t.rollMasterPIDParameters),_(a,e,t.yawMasterPIDParameters),_(a,e,t.thrustSlavePIDParameters),_(a,e,t.pitchSlavePIDParameters),_(a,e,t.rollSlavePIDParameters),_(a,e,t.yawSlavePIDParameters),t.pidBypass=e.getUint8(a.index),a.add(1)),n&P.STATE_PARAMETERS&&(a.parseFloat32Array(e,t.stateEstimationParameters),a.parseFloat32Array(e,t.enableParameters)),n&P.LED_STATES){var i=e.getUint16(a.index,1);a.add(2);for(var s=17,o=0;o<16;++o)if(i&1<<o)for(var T=0;T<s;++T)t.ledStates[o*s+T]=e.getUint8(a.index),a.add(1)}}function f(e,t){var a=new r;a.setInt8Array(e,t.version),e.setUint32(a.index,t.id,1),a.add(4),a.setFloat32Array(e,t.pcbOrientation),a.setFloat32Array(e,t.pcbTranslation),a.setInt8Array(e,t.mixTableFz),a.setInt8Array(e,t.mixTableTx),a.setInt8Array(e,t.mixTableTy),a.setInt8Array(e,t.mixTableTz),a.setFloat32Array(e,t.magBias),a.setUint8Array(e,t.assignedChannel),e.setUint8(a.index,t.commandInversion),a.add(1),a.setUint16Array(e,t.channelMidpoint),a.setUint16Array(e,t.channelDeadzone),a.setFloat32Array(e,t.thrustMasterPIDParameters),a.setFloat32Array(e,t.pitchMasterPIDParameters),a.setFloat32Array(e,t.rollMasterPIDParameters),a.setFloat32Array(e,t.yawMasterPIDParameters),a.setFloat32Array(e,t.thrustSlavePIDParameters),a.setFloat32Array(e,t.pitchSlavePIDParameters),a.setFloat32Array(e,t.rollSlavePIDParameters),a.setFloat32Array(e,t.yawSlavePIDParameters),e.setUint8(a.index,t.pidBypass),a.add(1),a.setFloat32Array(e,t.stateEstimationParameters),a.setFloat32Array(e,t.enableParameters),a.setUint8Array(e,t.ledStates)}function l(e){t("Received config!");var r=new DataView(e,0);h=new o,T(r,h),E()}function d(e){t("Received partial config!");var r=new DataView(e,0);h=angular.copy(h),A(r,h),E()}function E(){p[0]!==h.version[0]||p[1]!==h.version[1]?(t('<span style="color: red">WARNING: Configuration MAJOR or MINOR version mismatch!</span>'),t("eeprom version: <strong>"+h.version[0]+"."+h.version[1]+"."+h.version[2]+"</strong> - app expected version: <strong>"+p[0]+"."+p[1]+"."+p[2]+"</strong>")):(t('Recieved configuration version: <span style="color: green">'+h.version[0]+"."+h.version[1]+"."+h.version[2]+"</span>"),y())}function u(e){y=e}function c(e){I=e}function S(){return h}var m=627,h=new o,p=[1,3,0],y=function(){t("No callback defined for receiving configurations!")},I=function(){t("No callback defined for receiving logging state! Callback arguments: (isLogging, isLocked, delay)")},P={VERSION:1,ID:2,PCB:4,MIX_TABLE:8,MAG_BIAS:16,CHANNEL:32,PID_PARAMETERS:64,STATE_PARAMETERS:128,LED_STATES:256};return e.setCommandCallback(function(r,a){if(r&e.field.COM_SET_EEPROM_DATA&&l(a),r&e.field.COM_SET_PARTIAL_EEPROM_DATA&&d(a),r&(e.field.COM_SET_CARD_RECORDING|e.field.COM_SET_SD_CARD_DELAY)){var n=new Uint8Array(a);if(n.length>=3){var i=n[0]|n[1]<<8,s=n[2];I(0!==(1&s),0!==(2&s),i)}else t("Bad data given for logging info")}}),{request:n,reinit:i,send:s,getConfig:S,setConfigCallback:u,setLoggingCallback:c,getDesiredVersion:a,field:P}}angular.module("flybrixCommon").factory("deviceConfig",e),e.$inject=["serial","commandLog","serializer"]}(),function(){"use strict";function e(e,t){function r(){if(g||!e.busy()){g=!1;var r=new t,a=new ArrayBuffer(10),n=new DataView(a,0);n.setUint8(r.index,1),r.add(1);var i=-.8,s=c(4095*(h-i)/(1-i),0,4095),o=c(4095*-S(p,.1)/2,-2047,2047),_=c(4095*S(y,.1)/2,-2047,2047),T=c(4095*-S(I,.1)/2,-2047,2047),A=[s,o,_,T];r.setInt16Array(n,A);var f=(1<<P)+(1<<R+3);return n.setUint8(r.index,f),e.send(e.field.COM_SET_SERIAL_RC,new Uint8Array(a),!1)}}function a(e){h=e}function n(e){p=e}function i(e){y=e}function s(e){I=e}function o(e){P=e}function _(e){R=e}function T(){return h}function A(){return p}function f(){return y}function l(){return I}function d(){return P}function E(){return R}function u(){g=!0}function c(e,t,r){return Math.max(t,Math.min(e,r))}function S(e,t){return e>t?e-t:e<-t?e+t:0}var m={LOW:0,MID:1,HIGH:2},h=-1,p=0,y=0,I=0,P=m.HIGH,R=m.HIGH,g=!0;return{setThrottle:a,setPitch:n,setRoll:i,setYaw:s,setAux1:o,setAux2:_,getThrottle:T,getPitch:A,getRoll:f,getYaw:l,getAux1:d,getAux2:E,AUX:m,send:r,forceNextSend:u}}angular.module("flybrixCommon").factory("rcData",e),e.$inject=["serial","serializer"]}();